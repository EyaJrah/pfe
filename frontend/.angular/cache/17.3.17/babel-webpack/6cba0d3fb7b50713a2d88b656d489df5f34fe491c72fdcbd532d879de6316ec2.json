{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst environment_1 = require(\"./../environments/environment\");\nconst core_1 = require(\"@angular/core\");\nconst http_1 = require(\"@angular/common/http\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nlet ApiService = class ApiService {\n  http;\n  backendUrl = environment_1.environment.apiUrl;\n  constructor(http) {\n    this.http = http;\n  }\n  // Signup method\n  signup(name, email, password) {\n    console.log('Sending signup request to:', `${this.backendUrl}/auth/signup`);\n    return this.http.post(`${this.backendUrl}/auth/signup`, {\n      name,\n      email,\n      password\n    }).pipe((0, operators_1.tap)(response => console.log('Signup response:', response)), (0, operators_1.catchError)(this.handleError));\n  }\n  // Login method\n  login(email, password) {\n    const body = {\n      email,\n      password\n    };\n    const headers = new http_1.HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    console.log('Sending login request to:', `${this.backendUrl}/users/login`);\n    console.log('With body:', body);\n    return this.http.post(`${this.backendUrl}/users/login`, body, {\n      headers\n    }).pipe((0, operators_1.tap)(response => {\n      console.log('Login response:', response);\n      if (response && response.token) {\n        console.log('Storing token in localStorage');\n        localStorage.setItem('auth_token', response.token);\n      } else {\n        console.error('No token in login response');\n      }\n    }), (0, operators_1.catchError)(this.handleError));\n  }\n  // Get Profile method\n  getProfile() {\n    const token = localStorage.getItem('auth_token');\n    console.log('Getting profile with token:', token ? 'Token exists' : 'No token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.get(`${this.backendUrl}/users/profile`, {\n      headers\n    }).pipe((0, operators_1.tap)(response => console.log('Profile response:', response)), (0, operators_1.catchError)(this.handleError));\n  }\n  // Update Profile method\n  updateProfile(name, email) {\n    const token = localStorage.getItem('auth_token');\n    console.log('Updating profile with token:', token ? 'Token exists' : 'No token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.put(`${this.backendUrl}/users/profile`, {\n      name,\n      email\n    }, {\n      headers\n    }).pipe((0, operators_1.tap)(response => console.log('Update profile response:', response)), (0, operators_1.catchError)(this.handleError));\n  }\n  // Logout method\n  logout() {\n    console.log('Logging out, removing token from localStorage');\n    localStorage.removeItem('auth_token');\n  }\n  // Get scan results - can be used with or without a specific repoUrl\n  getScanResults(repoUrl) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const url = repoUrl ? `${this.backendUrl}/scan-results?repoUrl=${encodeURIComponent(repoUrl)}` : `${this.backendUrl}/scan-results`;\n    return this.http.get(url, {\n      headers\n    }).pipe((0, operators_1.tap)(response => console.log('Scan results response:', response)), (0, operators_1.catchError)(this.handleError));\n  }\n  // Scanner methods\n  scanWithSonarQube(repoUrl) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/sonar`, {\n      repoUrl\n    }, {\n      headers\n    }).pipe((0, operators_1.catchError)(this.handleError));\n  }\n  scanWithTrivy(repoUrl) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/trivy`, {\n      repoUrl\n    }, {\n      headers\n    }).pipe((0, operators_1.catchError)(this.handleError));\n  }\n  scanWithSnyk(repoUrl) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/snyk`, {\n      repoUrl\n    }, {\n      headers\n    }).pipe((0, operators_1.catchError)(this.handleError));\n  }\n  scanWithOWASP(repoUrl) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/owasp`, {\n      repoUrl\n    }, {\n      headers\n    }).pipe((0, operators_1.catchError)(this.handleError));\n  }\n  post(endpoint, data) {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return (0, rxjs_1.throwError)(() => new Error('No authentication token found'));\n    }\n    const headers = new http_1.HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    return this.http.post(`${this.backendUrl}${endpoint}`, data, {\n      headers,\n      withCredentials: true // Important pour CORS avec credentials\n    }).pipe((0, operators_1.tap)(response => console.log(`POST ${endpoint} response:`, response)), (0, operators_1.catchError)(error => {\n      console.error(`Error in POST ${endpoint}:`, error);\n      if (error.status === 401) {\n        // Token expiré ou invalide\n        localStorage.removeItem('auth_token');\n        return (0, rxjs_1.throwError)(() => new Error('Session expired. Please login again.'));\n      } else if (error.status === 0) {\n        // Problème de connexion\n        return (0, rxjs_1.throwError)(() => new Error('Cannot connect to server. Please check your connection.'));\n      }\n      return (0, rxjs_1.throwError)(() => error);\n    }));\n  }\n  // Centralized error handling\n  handleError(error) {\n    console.error('API Error:', error);\n    let errorMessage = 'An error occurred. Please try again.';\n    if (error.error instanceof ErrorEvent) {\n      // Erreur côté client\n      errorMessage = `Client error: ${error.error.message}`;\n    } else {\n      // Erreur côté serveur\n      switch (error.status) {\n        case 0:\n          errorMessage = 'Cannot connect to server. Please check your connection.';\n          break;\n        case 401:\n          errorMessage = 'Session expired. Please login again.';\n          localStorage.removeItem('auth_token');\n          break;\n        case 403:\n          errorMessage = 'Access denied. You do not have the required permissions.';\n          break;\n        case 404:\n          errorMessage = 'Resource not found.';\n          break;\n        case 500:\n          errorMessage = 'Server error. Please try again later.';\n          break;\n        default:\n          if (error.error && error.error.error) {\n            errorMessage = error.error.error;\n          } else if (error.error && error.error.errors) {\n            errorMessage = error.error.errors.map(err => err.msg).join(', ');\n          }\n      }\n    }\n    return (0, rxjs_1.throwError)(() => new Error(errorMessage));\n  }\n  static ctorParameters = () => [{\n    type: http_1.HttpClient\n  }];\n};\nexports.ApiService = ApiService;\nexports.ApiService = ApiService = tslib_1.__decorate([(0, core_1.Injectable)({\n  providedIn: 'root'\n}), tslib_1.__metadata(\"design:paramtypes\", [http_1.HttpClient])], ApiService);","map":{"version":3,"names":["environment_1","require","core_1","http_1","rxjs_1","operators_1","ApiService","http","backendUrl","environment","apiUrl","constructor","signup","name","email","password","console","log","post","pipe","tap","response","catchError","handleError","login","body","headers","HttpHeaders","token","localStorage","setItem","error","getProfile","getItem","throwError","Error","set","get","updateProfile","put","logout","removeItem","getScanResults","repoUrl","url","encodeURIComponent","scanWithSonarQube","scanWithTrivy","scanWithSnyk","scanWithOWASP","endpoint","data","withCredentials","status","errorMessage","ErrorEvent","message","errors","map","err","msg","join","exports","tslib_1","__decorate","Injectable","providedIn","HttpClient"],"sources":["/home/eya/Documents/pfe/frontend/src/app/api.service.ts"],"sourcesContent":["import { environment } from './../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly backendUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  // Signup method\n  signup(name: string, email: string, password: string): Observable<any> {\n    console.log('Sending signup request to:', `${this.backendUrl}/auth/signup`);\n    return this.http.post(`${this.backendUrl}/auth/signup`, { name, email, password })\n      .pipe(\n        tap(response => console.log('Signup response:', response)),\n        catchError(this.handleError)\n      );\n  }\n\n  // Login method\n  login(email: string, password: string): Observable<any> {\n    const body = { email, password };\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    console.log('Sending login request to:', `${this.backendUrl}/users/login`);\n    console.log('With body:', body);\n    \n    return this.http.post<any>(`${this.backendUrl}/users/login`, body, { headers })\n      .pipe(\n        tap(response => {\n          console.log('Login response:', response);\n          if (response && response.token) {\n            console.log('Storing token in localStorage');\n            localStorage.setItem('auth_token', response.token);\n          } else {\n            console.error('No token in login response');\n          }\n        }),\n        catchError(this.handleError)\n      );\n  }\n\n  // Get Profile method\n  getProfile(): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    console.log('Getting profile with token:', token ? 'Token exists' : 'No token');\n    \n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n    \n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.get(`${this.backendUrl}/users/profile`, { headers })\n      .pipe(\n        tap(response => console.log('Profile response:', response)),\n        catchError(this.handleError)\n      );\n  }\n\n  // Update Profile method\n  updateProfile(name: string, email: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    console.log('Updating profile with token:', token ? 'Token exists' : 'No token');\n    \n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n    \n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.put(`${this.backendUrl}/users/profile`, { name, email }, { headers })\n      .pipe(\n        tap(response => console.log('Update profile response:', response)),\n        catchError(this.handleError)\n      );\n  }\n\n  // Logout method\n  logout(): void {\n    console.log('Logging out, removing token from localStorage');\n    localStorage.removeItem('auth_token');\n  }\n\n  // Get scan results - can be used with or without a specific repoUrl\n  getScanResults(repoUrl?: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const url = repoUrl \n      ? `${this.backendUrl}/scan-results?repoUrl=${encodeURIComponent(repoUrl)}`\n      : `${this.backendUrl}/scan-results`;\n\n    return this.http.get(url, { headers })\n      .pipe(\n        tap(response => console.log('Scan results response:', response)),\n        catchError(this.handleError)\n      );\n  }\n\n  // Scanner methods\n  scanWithSonarQube(repoUrl: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/sonar`, { repoUrl }, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  scanWithTrivy(repoUrl: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/trivy`, { repoUrl }, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  scanWithSnyk(repoUrl: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/snyk`, { repoUrl }, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  scanWithOWASP(repoUrl: string): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`${this.backendUrl}/scan-results/owasp`, { repoUrl }, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  post(endpoint: string, data: any): Observable<any> {\n    const token = localStorage.getItem('auth_token');\n    if (!token) {\n      return throwError(() => new Error('No authentication token found'));\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n\n    return this.http.post(`${this.backendUrl}${endpoint}`, data, { \n      headers,\n      withCredentials: true // Important pour CORS avec credentials\n    }).pipe(\n      tap(response => console.log(`POST ${endpoint} response:`, response)),\n      catchError(error => {\n        console.error(`Error in POST ${endpoint}:`, error);\n        if (error.status === 401) {\n          // Token expiré ou invalide\n          localStorage.removeItem('auth_token');\n          return throwError(() => new Error('Session expired. Please login again.'));\n        } else if (error.status === 0) {\n          // Problème de connexion\n          return throwError(() => new Error('Cannot connect to server. Please check your connection.'));\n        }\n        return throwError(() => error);\n      })\n    );\n  }\n\n  // Centralized error handling\n  private handleError(error: HttpErrorResponse) {\n    console.error('API Error:', error);\n    \n    let errorMessage = 'An error occurred. Please try again.';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Erreur côté client\n      errorMessage = `Client error: ${error.error.message}`;\n    } else {\n      // Erreur côté serveur\n      switch (error.status) {\n        case 0:\n          errorMessage = 'Cannot connect to server. Please check your connection.';\n          break;\n        case 401:\n          errorMessage = 'Session expired. Please login again.';\n          localStorage.removeItem('auth_token');\n          break;\n        case 403:\n          errorMessage = 'Access denied. You do not have the required permissions.';\n          break;\n        case 404:\n          errorMessage = 'Resource not found.';\n          break;\n        case 500:\n          errorMessage = 'Server error. Please try again later.';\n          break;\n        default:\n          if (error.error && error.error.error) {\n            errorMessage = error.error.error;\n          } else if (error.error && error.error.errors) {\n            errorMessage = error.error.errors.map((err: any) => err.msg).join(', ');\n          }\n      }\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}