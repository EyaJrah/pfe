name: OWASP Dependency Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          cd frontend
          npm install
          cd ../backend
          npm install

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        continue-on-error: true
        with:
          project: 'CheckSec'
          path: '.'
          format: 'HTML JSON'
          args: >
            --enableExperimental
            --scan frontend/
            --scan backend/
            --out reports
            --failOnCVSS 11

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: reports/

      - name: Check for Critical Vulnerabilities
        if: always()
        run: |
          echo "### Dependency Check Results" > vulnerability-summary.md
          echo "\nChecking for vulnerabilities in reports/dependency-check-report.json..."
          
          if [ -f "reports/dependency-check-report.json" ]; then
            echo "\n#### Critical Vulnerabilities:" >> vulnerability-summary.md
            grep -B 1 -A 2 '"cvssv3_baseScore": [9,10]' reports/dependency-check-report.json || echo "No critical vulnerabilities found." >> vulnerability-summary.md
            
            echo "\n#### High Vulnerabilities:" >> vulnerability-summary.md
            grep -B 1 -A 2 '"cvssv3_baseScore": [7,8]' reports/dependency-check-report.json || echo "No high vulnerabilities found." >> vulnerability-summary.md
          else
            echo "No report file found!" >> vulnerability-summary.md
          fi
          
          cat vulnerability-summary.md
