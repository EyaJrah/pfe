name: OWASP Dependency Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Copy package files
        run: |
          cp frontend/package.json ./package.json
          cp frontend/package-lock.json ./package-lock.json 2>/dev/null || true

      - name: Install frontend dependencies
        run: |
          npm install
          mkdir -p frontend/node_modules
          mv node_modules/* frontend/node_modules/

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        id: dependency-check
        continue-on-error: true
        with:
          project: 'CheckSec'
          path: '.'
          format: 'HTML JSON'
          args: >
            --enableExperimental
            --failOnCVSS 9
            --scan frontend/
            --scan backend/
            --out reports

      - name: Debug Report Location
        if: always()
        run: |
          echo "Current directory contents:"
          ls -la
          echo "\nReports directory contents:"
          ls -la reports/ || echo "No reports directory found"
          echo "\nSearching for report files:"
          find . -type f -name "dependency-check-report.*"

      - name: Process Vulnerability Report
        if: always()
        run: |
          # Wait a moment for file system sync
          sleep 2
          
          # Try multiple locations
          for REPORT_PATH in \
            "./reports/dependency-check-report.json" \
            "./dependency-check-report.json" \
            "$(find . -name 'dependency-check-report.json' -type f | head -n1)"
          do
            if [ -f "$REPORT_PATH" ]; then
              echo "Found report at: $REPORT_PATH"
              REPORT_FILE="$REPORT_PATH"
              break
            fi
          done
          
          if [ -z "$REPORT_FILE" ]; then
            echo "ERROR: No report file found!"
            echo "Directory contents:"
            ls -la
            echo "\nReports directory contents:"
            ls -la reports/ || echo "No reports directory"
            echo "\nAll json files:"
            find . -name "*.json" -type f
            exit 1
          fi
          
          echo "Using report file: $REPORT_FILE"
          echo "Report file contents:"
          cat "$REPORT_FILE" | head -n 20
          
          echo "### Dependency Check Results" > dependency-report.md
          echo "" >> dependency-report.md
          echo "#### High Severity Vulnerabilities (CVSS >= 9.0):" >> dependency-report.md
          
          if grep -q '"cvssv3_baseScore": [9,10]' "$REPORT_FILE"; then
            echo "⚠️ Critical vulnerabilities found!" >> dependency-report.md
            grep -B 2 -A 2 '"cvssv3_baseScore": [9,10]' "$REPORT_FILE" >> dependency-report.md
          else
            echo "✅ No critical vulnerabilities found." >> dependency-report.md
          fi
          
          echo "" >> dependency-report.md
          echo "#### Medium Severity Vulnerabilities (CVSS 7.0-8.9):" >> dependency-report.md
          grep -B 2 -A 2 '"cvssv3_baseScore": [7,8]' "$REPORT_FILE" >> dependency-report.md || true

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-reports
          path: |
            reports/dependency-check-report.*
            dependency-report.md
