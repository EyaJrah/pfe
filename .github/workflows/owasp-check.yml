name: OWASP Dependency Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Install OWASP Dependency-Check CLI
        run: |
          VERSION="8.4.3"
          wget "https://github.com/jeremylong/DependencyCheck/releases/download/v${VERSION}/dependency-check-${VERSION}-release.zip"
          rm -rf dependency-check
          unzip -o dependency-check-${VERSION}-release.zip
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency Check
        continue-on-error: true
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "PFE Backend" \
            --scan backend/ \
            --format HTML \
            --format JSON \
            --out reports \
            --failOnCVSS 9 \
            --suppression suppression.xml || true

      - name: List reports
        run: ls -l reports || echo "No reports found"

      - name: Upload OWASP report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/
          retention-days: 7

      - name: Check for critical vulnerabilities
        if: always()
        run: |
          if [ -f reports/dependency-check-report.json ]; then
            echo "Checking for critical severity vulnerabilities..."
            CRITICAL_VULNS=$(jq '.dependencies[] | select(.vulnerabilities != null) | .vulnerabilities[] | select(.cvssv3_baseScore >= 9) | .name' reports/dependency-check-report.json | wc -l)
            if [ "$CRITICAL_VULNS" -gt 0 ]; then
              echo "⚠️ Found $CRITICAL_VULNS critical severity vulnerabilities!"
              echo "Please check the generated report in the artifacts for details."
              exit 0
            else
              echo "✅ No critical severity vulnerabilities found."
            fi
          else
            echo "⚠️ No JSON report found. Check HTML report for results."
            exit 0
          fi
