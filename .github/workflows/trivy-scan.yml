name: Trivy Security Scan

on:
  push:
    branches:
      - main
      - scanresult
      
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: npm test

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm install

      - name: Run Backend Tests
        working-directory: ./backend
        run: npm test

  trivy:
    name: Trivy Security Scan
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          scanners: 'vuln,secret,config,misconfig'
          hide-progress: false
          exit-code: '0'

      - name: Scan Docker configurations
        run: |
          echo "=== Docker Configuration Scan ===" > docker-scan.txt
          if [ -f frontend/Dockerfile ]; then
            echo "Frontend Dockerfile scan:" >> docker-scan.txt
            trivy config --severity CRITICAL,HIGH,MEDIUM,LOW frontend/Dockerfile >> docker-scan.txt
          fi
          if [ -f backend/Dockerfile ]; then
            echo "Backend Dockerfile scan:" >> docker-scan.txt
            trivy config --severity CRITICAL,HIGH,MEDIUM,LOW backend/Dockerfile >> docker-scan.txt
          fi

      - name: Scan npm dependencies
        run: |
          echo "=== NPM Dependencies Scan ===" > npm-scan.txt
          echo "Frontend dependencies:" >> npm-scan.txt
          cd frontend && trivy fs --scanners vuln --severity CRITICAL,HIGH,MEDIUM,LOW . >> ../npm-scan.txt || true
          echo "Backend dependencies:" >> npm-scan.txt
          cd ../backend && trivy fs --scanners vuln --severity CRITICAL,HIGH,MEDIUM,LOW . >> ../npm-scan.txt || true

      - name: Generate comprehensive report
        run: |
          {
            echo "# Security Scan Report"
            echo "## 1. File System Scan"
            trivy fs --scanners vuln,secret,config,misconfig --severity CRITICAL,HIGH,MEDIUM,LOW .
            echo -e "\n## 2. Docker Configuration Analysis"
            cat docker-scan.txt
            echo -e "\n## 3. Dependencies Analysis"
            cat npm-scan.txt
          } > trivy-results.txt

      - name: Display Trivy Results
        if: always()
        run: cat trivy-results.txt

      - name: Upload Trivy Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: |
            trivy-results.txt
            docker-scan.txt
            npm-scan.txt
          retention-days: 7 