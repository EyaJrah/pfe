name: Build
on:
  push:
    branches:
      - main
      - scanresult
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Check SonarCloud Configuration
        run: |
          if [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "SONAR_TOKEN is configured"
          else
            echo "SONAR_TOKEN is not configured"
            exit 1
          fi
          if [ -n "${{ secrets.SONAR_ORGANIZATION }}" ]; then
            echo "SONAR_ORGANIZATION is configured: ${{ secrets.SONAR_ORGANIZATION }}"
          else
            echo "SONAR_ORGANIZATION is not configured"
            exit 1
          fi
        
      - name: Debug sonar-project.properties
        run: |
          echo "Contenu du dossier courant :"
          ls -l
          echo "Contenu du fichier sonar-project.properties :"
          cat sonar-project.properties || echo "Fichier non trouvé"
      - name: Create SonarCloud project if not exists (auto)
        run: |
          if [ ! -f sonar-project.properties ]; then
            echo "Fichier sonar-project.properties introuvable !"
            exit 1
          fi
          PROJECT_KEY=$(grep '^sonar.projectKey=' sonar-project.properties | cut -d'=' -f2)
          if [ -z "$PROJECT_KEY" ]; then
            echo "Clé sonar.projectKey introuvable dans sonar-project.properties !"
            exit 1
          fi
          ORG_KEY=$(grep '^sonar.organization=' sonar-project.properties | cut -d'=' -f2)
          PROJECT_NAME=$(grep '^sonar.projectName=' sonar-project.properties | cut -d'=' -f2)
          EXISTS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/projects/search?projects=$PROJECT_KEY" | grep -c "\"key\":\"$PROJECT_KEY\"")
          if [ "$EXISTS" -eq 0 ]; then
            echo "Project does not exist, creating..."
            curl -X POST "https://sonarcloud.io/api/projects/create" \
              -u "${{ secrets.SONAR_TOKEN }}:" \
              -d "name=$PROJECT_NAME" \
              -d "project=$PROJECT_KEY" \
              -d "organization=$ORG_KEY"
          else
            echo "Project already exists."
          fi
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
